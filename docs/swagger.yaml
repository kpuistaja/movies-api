openapi: 3.0.2
info:
    title: Movies-API
    version: 1.0.0
    description: >-
        ### This is a Swagger UI for our Movies API  \n\n### Error handling\nErrors are presented using the
        HTTP status codes 400-599. The response include a more detailed explanation about the error in the
        body.\n\n```\n{\n  \"error\": \"Cleartext explanation of the error that occurred\"\n}\n```\n\n###
        Generic API errors\nThese error responses can be returned by any of the described endpoints.\n\n| HTTP
        status  |  Description |\n|---|---|\n| 400| Bad input parameters or invalid request. More information
        can be found in the response body.\n| 401| The consumer does not have access to the requested resource
        or the provided token is not valid.\n| 404| The requested resource can not be found or the user does
        not have access to the resource.\n| 5XX| A server error has occurred while processing the request.
paths:
    /movies:
        summary: Get a list of all movies
        description: Returns a list of all movies in api
        get:
            tags:
                - movies
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                List of movies:
                                    value:
                                        - The Internship
                                        - Hangover
                                        - Titanic
                    description: Returns a list of movies
            summary: Get a list of all movies
            description: Returns a list of all movies in the API
        post:
            requestBody:
                description: A new game to be created
                content:
                    error: {}
                required: true
            tags:
                - new-movie
            responses:
                '201':
                    content:
                        new-movie: {}
                    description: Create new movie
                '400':
                    description: One or all params are missing
            summary: Creates a movie
            description: Creates a new movie
    '/movies/{id}':
        get:
            tags:
                - details
            responses:
                '200':
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    type: string
                            examples:
                                Full details of a given movie:
                                    value:
                                        id: 1
                                        name: The Internship
                                        year: 1999
                    description: Returns full details of given id movie
                '404':
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/error'
                            examples:
                                Movie /w+ was not found:
                                    value:
                                        error: Movie \w+ was not found in game array
                    description: Movie was not found in movies array
            summary: Get full details of movie
            description: Returns full details of given id movie
        post:
            tags: []
            description: ''
components:
    schemas:
        error:
            title: Root Type for error
            description: ''
            type: object
            properties:
                error:
                    type: string
            example:
                error: Error message.
        new-movie:
            title: Root Type for new-movie
            description: ''
            required:
                - year
            type: object
            properties:
                name:
                    type: string
                year:
                    type: number
            example:
                name: Inception
                year: 2017
